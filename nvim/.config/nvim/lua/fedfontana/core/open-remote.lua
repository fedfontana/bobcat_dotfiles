-- alias gbr='open $(git remote get-url origin | sed -e "s/git\@/https:\/\//;s/:/\//2") &>/dev/null'

-- local function do_the_thing()
-- 	vim.fn.jobstart("open", {
-- 		args = {
-- 			vim.fn
-- 				.systemlist("git remote get-url origin")[1]
-- 				:gsub(":", "/", 2)
-- 				:gsub("git@", "https://")
-- 				:gsub(".git", "")[1],
-- 		},
-- 		on_exit = function(_, code)
-- 			if code ~= 0 then
-- 				vim.cmd('echoerr "Failed to open remote"')
-- 			end
-- 		end,
-- 	})
-- end
--
-- vim.keymap.set("n", "<leader>gbr", do_the_thing)

-- local function open_git_repo(remote_name)
-- 	local git_root = vim.fn.systemlist("git rev-parse --show-toplevel")[1]
-- 	if not git_root or git_root == "" then
-- 		vim.cmd('echoerr "Not in a Git repository"')
-- 		return
-- 	end
--
-- 	local remote = remote_name or "origin"
-- 	local remote_url = vim.fn.systemlist("git remote get-url " .. remote)[1]
-- 	local url = remote_url:gsub("git@", "https://"):gsub(":", "/", 2):gsub(".git", "")
--
-- 	if vim.fn.has("unix") == 1 then
-- 		os.execute("xdg-open " .. url .. " &>/dev/null")
-- 	elseif vim.fn.has("mac") == 1 then
-- 		os.execute("open " .. url .. " &>/dev/null")
-- 	else
-- 		vim.cmd('echoerr "Unsupported operating system"')
-- 	end
-- end
--
-- -- Define a Neovim command to find and open the root Git repository
-- vim.cmd([[command! -nargs=? -bar OpenGitRepo lua require('fedfontana.core.open-remote').open_git_repo(<f-args>)]])
--
-- return {
-- 	open_git_repo = open_git_repo,
-- }
