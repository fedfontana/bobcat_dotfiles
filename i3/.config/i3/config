# Reference https://i3wm.org/docs/userguide.html

set $mod Mod4
set $alt Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Code Pro Nerd Font 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec --no-startup-id alacritty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run -fn "Source Code Pro Nerd Font" -i -p Applications
# This is a wrapper around dmenu that will only list applications shipping a .desktop file
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

bindsym $mod+Tab workspace back_and_forth

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

#TODO set and use vars like $right and $arr_right
#TODO resolve conflicts for commented stuff

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

bindsym $mod+i bar mode toggle

### Borders
# Activate borders only when there's more than one window in the current workspace
hide_edge_borders smart
default_border pixel 3
default_floating_border pixel 2

bindsym $mod+Shift+b exec --no-startup-id i3-msg border toggle

### Gaps
gaps inner 5
gaps outer 3

# Enable gaps when there's at least one container in the current workspace
smart_gaps on

set $mode_gaps Gaps: (o) outer, (i) inner
bindsym $mod+Shift+g mode "$mode_gaps"
mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
### End Gaps

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

bindsym $mod+$alt+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+$alt+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+$alt+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+$alt+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+$alt+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+$alt+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+$alt+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+$alt+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+$alt+9 move container to workspace number $ws9; workspace number $ws9

###############################################################################
# Scratchpad
###############################################################################

## Scratchpad // Move focused window to Scratchpad // <><Ctrl> s ##
bindsym $mod+Ctrl+s move to scratchpad

## Scratchpad // show Scratchpad (press more than once to cycle winwows in Scratchpad) // <><Ctrl> a ##
bindsym $mod+Ctrl+a scratchpad show

## Scratchpad // Show all scratchpad windows // <><Ctrl> Enter ##
bindsym $mod+Ctrl+Return [class=.*] scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

mode "resize" {
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

###############################################################################
# i3 Colors and Fonts
###############################################################################

# Create variables from Xresources for i3's look.
set $focused.color.border "#1F2430"
set $focused.color.background "#BFBAB0"
set $focused.color.text "#FFFFFF"
set $focused.color.indicator "#FFA759"
set $focused.color.child_border "#BFBAB0"

set $focused_inactive.color.border "#1F2430"
set $focused_inactive.color.background "#292B30"
set $focused_inactive.color.text "#E6E1CF"
set $focused_inactive.color.indicator "#FFA759"
set $focused_inactive.color.child_border "#1F2430"

set $unfocused.color.border "#1F2430"
set $unfocused.color.background "#292B30"
set $unfocused.color.text "#E6E1CF"
set $unfocused.color.indicator "#292B30"
set $unfocused.color.child_border "#1F2430"

set $urgent.color.border "#1F2430"
set $urgent.color.background "#FF3333"
set $urgent.color.text "#FFFFFF"
set $urgent.color.indicator "#FF3333"
set $urgent.color.child_border "#1F2430"


# Window Border color
# class                 border                             background                         text                               indicator                          child_border
client.focused          $focused.color.border              $focused.color.background          $focused.color.text                $focused.color.indicator           $focused.color.child_border
client.focused_inactive $focused_inactive.color.border     $focused_inactive.color.background $focused_inactive.color.text       $focused_inactive.color.indicator  $focused_inactive.color.child_border
client.unfocused        $unfocused.color.border            $unfocused.color.background        $unfocused.color.text              $unfocused.color.indicator         $unfocused.color.child_border
client.urgent           $urgent.color.border               $urgent.color.background           $urgent.color.text                 $urgent.color.indicator            $urgent.color.child_border

# Create variables from Xresources for i3bars's look.
set $i3-wm.bar.background.color "#1F2430"
set $i3-wm.bar.statusline.color "#E6E1CF"
set $i3-wm.bar.separator.color "#77A8D9"

set $i3-wm.bar.workspace.focused.border.color "#FFA759"
set $i3-wm.bar.workspace.focused.background.color "#FFA759"
set $i3-wm.bar.workspace.focused.text.color "#1F2430"

set $i3-wm.bar.workspace.active.border.color "#FFD580"
set $i3-wm.bar.workspace.active.background.color "#FFD580"
set $i3-wm.bar.workspace.active.text.color "#292B30"

set $i3-wm.bar.workspace.inactive.border.color "#BFBAB0"
set $i3-wm.bar.workspace.inactive.background.color "#BFBAB0"
set $i3-wm.bar.workspace.inactive.text.color "#292B30"

set $i3-wm.bar.workspace.urgent.border.color "#FF3333"
set $i3-wm.bar.workspace.urgent.background.color "#FF3333"
set $i3-wm.bar.workspace.urgent.text.color "#FFFFFF"


bar {
  # either `top` or `bottom`
  position bottom
  mode dock
	status_command i3blocks

  colors {
      background $i3-wm.bar.background.color
      statusline $i3-wm.bar.statusline.color
      separator  $i3-wm.bar.separator.color

#                        BORDER                                         BACKGROUND                                      TEXT
      focused_workspace  $i3-wm.bar.workspace.focused.border.color      $i3-wm.bar.workspace.focused.background.color   $i3-wm.bar.workspace.focused.text.color
      active_workspace   $i3-wm.bar.workspace.active.border.color       $i3-wm.bar.workspace.active.background.color    $i3-wm.bar.workspace.active.text.color
      inactive_workspace $i3-wm.bar.workspace.inactive.border.color     $i3-wm.bar.workspace.inactive.background.color  $i3-wm.bar.workspace.inactive.text.color
      urgent_workspace   $i3-wm.bar.workspace.urgent.border.color       $i3-wm.bar.workspace.urgent.background.color    $i3-wm.bar.workspace.urgent.text.color
  }
}

# Media player controls
# bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
# bindsym XF86AudioNext exec --no-startup-id playerctl next
# bindsym XF86AudioPrev exec --no-startup-id playerctl previous

bindsym $mod+Escape exec --no-startup-id dm-tool switch-to-greeter

bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10% -q
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%- -q


bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle


exec --no-startup-id feh --bg-fill --randomize $HOME/Pictures/wallpapers/*
exec --no-startup-id picom --config $HOME/.config/picom/picom.conf
#TODO check whether unclutter is actually working
exec --no-startup-id unclutter

# Screenshots
bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/screenshots/$(date +'screenshot_%d_%m_%Y_%H_%M_%S.png')"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/screenshots/$(date +'screenshot_%d_%m_%Y_%H_%M_%S)"
bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/screenshots/$(date +'screenshot_%d_%m_%Y_%H_%M_%S)"

## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

